{{- if  .Values.runAsJob }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "spark.pod-name" . }}
  namespace: {{ .Values.project.namespace }}
  labels:
    {{- include "spark.commonLabels" . | indent 4 }}
spec:
  selector:
    matchLabels:
  backoffLimit: 0
  template:
    metadata:
      labels:
        {{- include "spark.selectorLabels" . | indent 8 }}
        {{- include "test-label-for-driver" . | indent 8 }}
        spark.driver: {{ include "spark.name" . }}
      annotations:
    spec:
      hostname: {{ include "spark.name" . }}
      serviceAccountName: default
      restartPolicy: Never
      securityContext:
        fsGroup: 185
      initContainers:
        - name: git-init
          image: rehanann/git-pull:v1.0
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "-c"]
          args: 
            - |
              cd /opt/spark/work-dir/shared/ && \
              rm -rf pyspark && \
              git clone https://${GIT_PULL_USERNAME}:${GIT_PULL_PASSWORD}@${GIT_REPO_URL} pyspark
          env:
            - name: GIT_PULL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: git-pull-secret
                  key: git-username
            - name: GIT_PULL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: git-pull-secret
                  key: git-password
            - name: GIT_REPO_URL
              valueFrom:
                secretKeyRef:
                  name: git-pull-secret
                  key: git-repo-url
          volumeMounts:
            {{- include "spark.pod-volumeMounts-shared" . | nindent 10 }}
      containers:
        - name: app
          securityContext:
            runAsUser: 185
            runAsGroup: 185
            allowPrivilegeEscalation: false
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: {{- toYaml .Values.image.command | nindent 12 }}
          args:
            {{- toYaml .Values.image.args | nindent 12 }}
           # WKFM Template backward compatible as per version 3.19.02.
          resources:
             {{- toYaml .Values.resources | nindent 12 }}
          stdin: true
          tty: true
          env:
            - name: DRIVER_POD
              value: "true"
            - name: PYSPARK_PYTHON
              value: {{.Values.pyspark.python}}
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: SPARK_HOME
              value: /opt/spark
            {{- range $key, $value := .Values.envVars.driver }} {{/* cusom env vars for the driver */}}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          ports:
            - containerPort: 4040
              name: ui-port
            - containerPort: {{.Values.services.driver.port}}
              name: driver-port
          volumeMounts:
          {{- include "spark.pod-volumeMounts-spark-defaults-conf" . | nindent 10 }}
          {{- include "spark.pod-volumeMounts-spark-exec-template" . | nindent 10 }}
          {{- if .Values.sharedVolume.enabled }}
          {{- include "spark.pod-volumeMounts-shared" . | nindent 10 }}
          {{- end }}

      volumes:
      {{- include "spark.merged-configmap-volume" . | nindent 6 }}
      {{- if .Values.sharedVolume.enabled }}
      {{- include "spark.pod-volumes-share-pvc" . | nindent 6 }}
      {{- end }}
{{- end}}    
